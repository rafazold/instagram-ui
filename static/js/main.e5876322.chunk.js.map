{"version":3,"sources":["config/index.js","config/development.js","config/production.js","Header/User/User.js","Header/Header.js","Feed/Post/Engage/Engage.js","Feed/Post/Tags/Tag/Tag.js","Feed/Post/Tags/Tags.js","Feed/Post/Header/User/User.js","Feed/Post/Header/Header.js","Feed/Post/Post.js","Feed/Feed.js","Profile/Profile.js","models/post.model.js","CreatePost/CreatePost.js","models/register.model.js","Register/Register.js","models/login.model.js","Login/Login.js","models/editProfile.models.js","editProfile/EditPofile.js","App.js","serviceWorker.js","index.js"],"names":["env","development","apiUrl","production","User","props","state","user","hideMenu","fetch","config","credentials","then","res","json","setState","catch","e","console","log","this","method","headers","status","history","push","className","username","onClick","toggleMenu","bind","src","avatar","size","to","logout","Component","withRouter","Header","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Engage","likes","Tag","children","Tags","tags","map","tag","alt","userName","dateStr","creationDate","Date","toLocaleString","month","day","hour","minute","year","Post","datePosted","title","Feed","posts","loading","sizeUnit","color","post","key","_id","image","created","Profile","schema","yup","shape","min","max","required","CreatePost","values","data","FormData","Array","isArray","forEach","value","append","convertToFormData","body","window","location","href","err","initialValues","validationSchema","postModel","onSubmit","submit","setFieldValue","name","type","onChange","event","currentTarget","files","htmlFor","component","as","placeholder","handleTagsChange","Button","password","matches","gender","birthDate","about","Register","registerModel","Login","incorrectLoginMessage","JSON","stringify","loginModel","EditPofile","editProfileModel","App","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"glBASeA,G,OANH,CACVC,YCJa,CACXC,OAAQ,yBDIVC,WELa,CACXD,OAAQ,6CFQZ,Y,gBGDME,G,mBACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,KAAM,KACNC,UAAU,GAJC,E,iFAQE,IAAD,OAChBC,MAAMC,EAAOR,OAAS,gBAAiB,CACnCS,YAAa,YAGZC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAL,GAEF,EAAKQ,SAAS,CAACR,YAElBS,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,Q,mCAIxBG,KAAKL,SAAS,CAACP,UAAWY,KAAKd,MAAME,a,qCAGzCY,KAAKL,SAAS,CAACP,UAAU,M,qCAIzBY,KAAKL,SAAS,CAACP,UAAU,M,+BAGnB,IAAD,OACLC,MAAMC,EAAOR,OAAS,oBAAqB,CACvCmB,OAAQ,MACRV,YAAa,UACbW,QAAS,CACL,eAAgB,sBAGnBV,MAAK,SAAAC,GACgB,MAAfA,EAAIU,QACH,EAAKlB,MAAMmB,QAAQC,KAAK,aAG/BT,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAI,qBAAsBF,Q,+BAKlD,OACI,6BAEQG,KAAKd,MAAMC,KACL,yBAAKmB,UAAU,YACb,yBAAKA,UAAU,uBAAf,SACWN,KAAKd,MAAMC,KAAKoB,UAE3B,yBAAKD,UAAU,cAAcE,QAASR,KAAKS,WAAWC,KAAKV,OAEnDA,KAAKd,MAAMC,KACL,yBAAKwB,IAAKrB,EAAOR,OAAS,IAAMkB,KAAKd,MAAMC,KAAKyB,SAChD,kBAAC,IAAD,CAAQC,KAAK,SAKvB,wBAAIP,UAAS,uBAAkBN,KAAKd,MAAME,SAAW,oBAAsB,KAGvE,yCACA,4BAAI,kBAAC,IAAD,CAAM0B,GAAG,gBAAT,iBACJ,wBAAIN,QAASR,KAAKe,OAAOL,KAAKV,OAA9B,YAIV,yBAAKM,UAAU,YACb,kBAAC,IAAD,CAAMA,UAAU,YAAYQ,GAAG,aAA/B,YACA,kBAAC,IAAD,CAAMR,UAAU,YAAYQ,GAAG,UAA/B,SACA,yBAAKR,UAAU,cACVE,QAASR,KAAKS,WAAWC,KAAKV,OAC/B,kBAAC,IAAD,CAAQa,KAAK,e,GAlF1BG,cA0FJC,cAAWjC,GClEXkC,E,iLAxBP,OACI,yBAAKZ,UAAU,UACX,kBAACa,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACtB,kBAACF,EAAA,EAAOG,MAAR,KACI,kBAAC,IAAD,CAAMhB,UAAU,eAAeQ,GAAG,KAAlC,cAEJ,kBAACK,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,oBAChB,kBAACC,EAAA,EAAD,CAAKrB,UAAU,WACX,kBAAC,IAAD,CAAMA,UAAU,WAAWQ,GAAG,KAA9B,QACA,kBAAC,IAAD,CAAMR,UAAU,WAAWQ,GAAG,YAA9B,WACA,kBAAC,IAAD,CAAMR,UAAU,WAAWQ,GAAG,gBAA9B,aAEJ,6BACG,kBAAC,EAAD,c,GAhBNE,a,wBCmBNY,G,wLAjBP,OACI,6BAAStB,UAAU,UACf,yBAAKA,UAAU,iBACX,0BAAMA,UAAU,uBACZ,4BAAQA,UAAU,iBAAgB,kBAAC,IAAD,OAClC,4BAAQA,UAAU,eAAc,kBAAC,IAAD,OAChC,4BAAQA,UAAU,cAAa,kBAAC,IAAD,QAEnC,0BAAMA,UAAU,cACZ,4BAAQA,UAAU,cAAa,kBAAC,IAAD,OAC/B,0BAAMA,UAAU,cAAcN,KAAKf,MAAM4C,c,GAZ5Cb,cCONc,G,wLARP,OACI,0BAAMxB,UAAU,OAAhB,IACMN,KAAKf,MAAM8C,c,GAJXf,cCkBHgB,G,wLAdP,OACI,yBAAK1B,UAAU,QACVN,KAAKf,MAAMgD,KAAKC,KAAI,SAAAC,GACjB,OAAO,8BACH,kBAAC,EAAD,KACKA,Y,GARVnB,cCgBJhC,G,+LAVP,OACI,yBAAKsB,UAAU,gBAEX,yBAAKK,IAAKrB,EAAOR,OAAS,IAAMkB,KAAKf,MAAM2B,OAAQwB,IAAI,cACtDpC,KAAKf,MAAMoD,c,GANTrB,c,ICmBJE,E,iLAVP,OACI,4BAAQZ,UAAU,eACd,kBAAC,EAAD,CAAMM,OAAQZ,KAAKf,MAAM2B,OAAQyB,SAAUrC,KAAKf,MAAMoD,WACtD,yBAAK/B,UAAU,cAVXgC,EAUmCtC,KAAKf,MAAMsD,aATjD,IAAIC,KAAKF,GACVG,eAAe,QAAS,CAAEC,MAAO,QAASC,IAAK,UAAWC,KAAM,UAAWC,OAAQ,UAAWC,KAAM,eAFpH,IAAoBR,M,GAKCtB,aCWN+B,E,iLAhBP,OACI,6BAASzC,UAAU,QACf,kBAAC,EAAD,CAAQiC,aAAcvC,KAAKf,MAAM+D,WAAYpC,OAAQZ,KAAKf,MAAM2B,OAAQyB,SAAUrC,KAAKf,MAAMoD,WAC7F,yBAAK/B,UAAU,sBACX,yBAAKA,UAAU,aAAaK,IAAKrB,EAAOR,OAAS,IAAMkB,KAAKf,MAAM0B,IAAKyB,IAAI,UAE/E,kBAAC,EAAD,CAAQP,MAAQ7B,KAAKf,MAAM4C,QAC3B,yBAAKvB,UAAU,gBACX,wBAAIA,UAAU,cAAcN,KAAKf,MAAMgE,OACvC,kBAAC,EAAD,CAAMhB,KAAMjC,KAAKf,MAAMgD,a,GAXxBjB,a,SCmDJkC,E,YAnDX,WAAYjE,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTiE,MAAO,GACPC,SAAS,GAJE,E,iFAQE,IAAD,OAChB/D,MAAMC,EAAOR,OAAS,cACjBU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA2D,GACF,EAAKxD,SAAS,CAACwD,QAAMC,SAAQ,S,+BAMrC,OACI,6BACSpD,KAAKd,MAAMkE,QACR,yBAAK9C,UAAU,WACX,kBAAC,aAAD,CACI+C,SAAU,KACVxC,KAAM,IACNyC,MAAO,UACPF,SAAS,KACR,KAEjB,yBAAK9C,UAAU,oCACVN,KAAKd,MAAMiE,MAAMjB,KAAI,SAAAqB,GAClB,OAAO,yBAAKjD,UAAU,mCAClB,kBAAC,EAAD,CACIkD,IAAKD,EAAKE,IACVR,MAAOM,EAAKN,MACZtC,IAAK4C,EAAKG,MACV7B,MAAO0B,EAAK1B,MACZmB,WAAYO,EAAKI,QACjB1B,KAAMsB,EAAKtB,KACXI,SAAUkB,EAAKpE,KAAKoB,SACpBK,OAAQ2C,EAAKpE,KAAKyB,mB,GAzC/BI,aCKJ4C,E,iLARP,OACI,4C,GAHU5C,a,wBCMP6C,EANFC,WAAaC,MAAM,CAC5Bd,MAAOa,WAAaE,IAAI,GAAGC,IAAI,KAAKC,SAAS,mCAC7CR,MAAOI,UAAYI,SAAS,6BAC5BjC,KAAM6B,Y,oCC4FKK,G,mBArFX,WAAYlF,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CAAC+C,KAAM,IAFL,E,8EAKFA,GACTjC,KAAKL,SAAS,CACVsC,KAAMA,M,wCAIAmC,GACd,IAAMC,EAAO,IAAIC,SADK,WAEbd,GACLe,MAAMC,QAAQJ,EAAOZ,IACfY,EAAOZ,GAAKiB,SAAQ,SAAAC,GAAK,OAAIL,EAAKM,OAAOnB,EAAM,KAAMkB,MACrDL,EAAKM,OAAOnB,EAAKY,EAAOZ,KAHlC,IAAK,IAAIA,KAAOY,EAAS,EAAhBZ,GAKT,OAAOa,I,6BAGJD,GACH,IAAMC,EAAOrE,KAAK4E,kBAAkBR,GAEpC/E,MAAMC,EAAOR,OAAS,aAAc,CAChCmB,OAAQ,OACR4E,KAAMR,EACN9E,YAAa,YAEZC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA+D,GAAI,OAAIzD,QAAQC,IAAI,QAASwD,MAClC/D,MAAK,kBAAMsF,OAAOC,SAASC,KAAO,OAClCpF,OAAM,SAAAqF,GAAG,OAAInF,QAAQC,IAAIkF,Q,+BAGxB,IAAD,OACL,OACI,yBAAK3E,UAAU,eACX,2CACA,kBAAC,IAAD,CAAQ4E,cAAe,CAACxB,MAAO,GAAIT,MAAO,GAAIhB,KAAM,IAC5CkD,iBAAkBC,EAClBC,SAAUrF,KAAKsF,OAAO5E,KAAKV,QAE9B,YAAsB,IAApBuF,EAAmB,EAAnBA,cACC,OAAO,kBAAC,IAAD,CAAMjF,UAAU,6BACnB,yBAAKA,UAAU,mBACX,2BAAOkF,KAAK,QAAQC,KAAK,OAAO/D,GAAG,QAAQgE,SAAW,SAAAC,GAClDJ,EAAc,QAASI,EAAMC,cAAcC,MAAM,OAErD,2BAAOC,QAAQ,QAAQxF,UAAU,iBACjC,8BACI,kBAAC,IAAD,MADJ,kBAIA,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAcA,UAAU,0BAA0BkF,KAAK,QAAQO,UAAU,UAGjF,yBAAKzF,UAAU,kBACX,yCACA,kBAAC,IAAD,CAAOkF,KAAK,QAAQQ,GAAG,WAAWC,YAAY,qBAAqB3F,UAAU,iBAC7E,kBAAC,IAAD,CAAcA,UAAU,qBAAqBkF,KAAK,QAAQO,UAAU,SAExE,yBAAKzF,UAAU,kBACX,wCACA,kBAAC,IAAD,CAAWoE,MAAO,EAAKxF,MAAM+C,KAClByD,SAAU,SAACzD,GACP,EAAKiE,iBAAiBjE,GACtBsD,EAAc,OAAQtD,IAE1B3B,UAAU,kCACrB,6BAAK,+DAET,yBAAKA,UAAU,6CACX,kBAAC6F,EAAA,EAAD,CAAQV,KAAK,UAAS,kBAAC,IAAD,MAAtB,8B,GA3EPzE,cCCV6C,EAVFC,WAAaC,MAAM,CAC5ByB,KAAM1B,WAAaE,IAAI,GAAGC,IAAI,KAAKC,WACnC3D,SAAUuD,WAAaE,IAAI,GAAGC,IAAI,KAAKC,WACvCkC,SAAUtC,WAAauC,QAAQ,8CAA+C,iEAAiErC,IAAI,GAAGC,IAAI,IAAIC,WAC9JoC,OAAQxC,WAAaI,WACrBqC,UAAWzC,SAAWI,WACtBsC,MAAO1C,WACPlD,OAAQkD,UAAYI,SAAS,+BCD3BuC,G,iMAEgBrC,GACd,IAAMC,EAAO,IAAIC,SADK,WAEbd,GACLe,MAAMC,QAAQJ,EAAOZ,IACfY,EAAOZ,GAAKiB,SAAQ,SAAAC,GAAK,OAAIL,EAAKM,OAAOnB,EAAM,KAAMkB,MACrDL,EAAKM,OAAOnB,EAAKY,EAAOZ,KAHlC,IAAK,IAAIA,KAAOY,EAAS,EAAhBZ,GAKT,OAAOa,I,6BAGJD,GACH,IAAMC,EAAOrE,KAAK4E,kBAAkBR,GAEpC/E,MAAMC,EAAOR,OAAS,aAAc,CAChCmB,OAAQ,OACR4E,KAAMR,EACN9E,YAAa,YAEZC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAL,GAAI,OAAIW,QAAQC,IAAI,QAASZ,MAElCS,OAAM,SAAAqF,GAAG,OAAInF,QAAQC,IAAIkF,Q,+BAM9B,OACI,yBAAK3E,UAAU,gBACX,4CACA,kBAAC,IAAD,CAAQ4E,cAAe,CAACM,KAAM,GAAIjF,SAAU,GAAI6F,SAAU,GAAIG,UAAW,IAAI/D,KAAQ8D,OAAQ,IAAKE,MAAO,GAAI5F,OAAQ,IAC7GuE,iBAAkBuB,EAClBrB,SAAUrF,KAAKsF,OAAO5E,KAAKV,QAE1B,YAAsB,IAApBuF,EAAmB,EAAnBA,cACC,OAAO,kBAAC,IAAD,CAAMjF,UAAU,sBACvB,yBAAKA,UAAU,kBACX,2BAAOwF,QAAQ,QAAf,SACA,kBAAC,IAAD,CAAON,KAAK,OAAO9D,GAAG,OAAOpB,UAAU,iBACvC,kBAAC,IAAD,CAAcA,UAAU,0BAA0BkF,KAAK,OAAOO,UAAU,SAE5E,yBAAKzF,UAAU,kBACX,2BAAOwF,QAAQ,YAAf,aACA,kBAAC,IAAD,CAAON,KAAK,WAAW9D,GAAG,WAAWpB,UAAU,iBAC/C,kBAAC,IAAD,CAAcA,UAAU,0BAA0BkF,KAAK,WAAWO,UAAU,SAEhF,yBAAKzF,UAAU,kBACX,2BAAOwF,QAAQ,YAAf,aACA,kBAAC,IAAD,CAAOL,KAAK,WAAWD,KAAK,WAAW9D,GAAG,WAAWpB,UAAU,iBAC/D,kBAAC,IAAD,CAAcA,UAAU,0BAA0BkF,KAAK,WAAWO,UAAU,SAEhF,yBAAKzF,UAAU,mBACX,2BAAOkF,KAAK,SAASC,KAAK,OAAO/D,GAAG,SAASgE,SAAW,SAAAC,GACpDJ,EAAc,SAAUI,EAAMC,cAAcC,MAAM,OAEtD,2BAAOC,QAAQ,SAASxF,UAAU,iBAC9B,sDAIJ,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAcA,UAAU,0BAA0BkF,KAAK,SAASO,UAAU,UAGlF,yBAAKzF,UAAU,kBACX,2BAAOwF,QAAQ,aAAf,eACA,kBAAC,IAAD,CAAOL,KAAK,OAAOD,KAAK,YAAY9D,GAAG,YAAYpB,UAAU,iBAC7D,kBAAC,IAAD,CAAcA,UAAU,0BAA0BkF,KAAK,YAAYO,UAAU,SAEjF,yBAAKzF,UAAU,kBACX,2BAAOwF,QAAQ,UAAf,WACA,kBAAC,IAAD,CAAOC,UAAU,SAASP,KAAK,SAAS9D,GAAG,SAASpB,UAAU,gBAC1D,4BAAQoE,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,WAEJ,kBAAC,IAAD,CAAcpE,UAAU,0BAA0BkF,KAAK,YAAYO,UAAU,SAEjF,yBAAKzF,UAAU,kBACX,2BAAOwF,QAAQ,SAAf,UACA,kBAAC,IAAD,CAAOE,GAAG,WAAWtE,GAAG,QAAQ8D,KAAK,QAAQlF,UAAU,iBACvD,kBAAC,IAAD,CAAcA,UAAU,0BAA0BkF,KAAK,QAAQO,UAAU,SAE7E,yBAAKzF,UAAU,6CACX,kBAAC6F,EAAA,EAAD,CAAQV,KAAK,UAAb,sB,GArFTzE,cA+FRC,cAAWwF,GChGX5C,EALFC,WAAaC,MAAM,CAC5BxD,SAAUuD,WAAaE,IAAI,GAAGC,IAAI,KAAKC,WACvCkC,SAAUtC,WAAaE,IAAI,GAAGC,IAAI,IAAIC,aCGpCyC,E,YAEF,WAAY1H,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT0H,uBAAuB,GAHZ,E,oEAOZxC,GAAS,IAAD,OACXtE,QAAQC,IAAIqE,GACZpE,KAAKL,SAAS,CAACiH,uBAAuB,IACtCvH,MAAMC,EAAOR,OAAS,mBAAoB,CACtCmB,OAAQ,OACR4E,KAAMgC,KAAKC,UAAU1C,GACrB7E,YAAa,UACbW,QAAS,CACL,eAAgB,sBAErBV,MAAK,SAAAC,GACc,MAAfA,EAAIU,OACH,EAAKlB,MAAMmB,QAAQC,KAAK,KACH,MAAfZ,EAAIU,OACV,EAAKR,SAAS,CAACiH,uBAAuB,IAEtC9G,QAAQC,IAAI,yB,+BAMpB,OACI,6BACI,qCACA,6BACA,kBAAC,IAAD,CAAQmF,cAAe,CAAC3E,SAAU,GAAI6F,SAAU,IACxCjB,iBAAkB4B,EAClB1B,SAAUrF,KAAKsF,OAAO5E,KAAKV,OAC/B,kBAAC,IAAD,CAAMM,UAAU,sBACXN,KAAKd,MAAM0H,sBAAwB,yBAAKtG,UAAU,+BAAf,kCAAoF,KACxH,yBAAKA,UAAU,kBACX,2BAAOwF,QAAQ,YAAf,aACA,kBAAC,IAAD,CAAON,KAAK,WAAW9D,GAAG,WAAWpB,UAAU,iBAC/C,kBAAC,IAAD,CAAcA,UAAU,0BAA0BkF,KAAK,WAAWO,UAAU,SAEhF,yBAAKzF,UAAU,kBACX,2BAAOwF,QAAQ,YAAf,aACA,kBAAC,IAAD,CAAOL,KAAK,WAAWD,KAAK,WAAW9D,GAAG,WAAWpB,UAAU,iBAC/D,kBAAC,IAAD,CAAcA,UAAU,0BAA0BkF,KAAK,WAAWO,UAAU,SAEhF,yBAAKzF,UAAU,6CACX,kBAAC6F,EAAA,EAAD,CAAQV,KAAK,UAAb,iB,GAnDRzE,aA4DLC,cAAW0F,GCvDX9C,EAVFC,WAAaC,MAAM,CAC5ByB,KAAM1B,WAAaE,IAAI,GAAGC,IAAI,KAC9B1D,SAAUuD,WAAaE,IAAI,GAAGC,IAAI,KAClCmC,SAAUtC,WAAauC,QAAQ,8CAA+C,iEAAiErC,IAAI,GAAGC,IAAI,IAC1JqC,OAAQxC,WACRyC,UAAWzC,SACX0C,MAAO1C,WACPlD,OAAQkD,QAAU,+BCDhBkD,G,iMAEgB5C,GACd,IAAMC,EAAO,IAAIC,SADK,WAEbd,GACLe,MAAMC,QAAQJ,EAAOZ,IACfY,EAAOZ,GAAKiB,SAAQ,SAAAC,GAAK,OAAIL,EAAKM,OAAOnB,EAAM,KAAMkB,MACrDL,EAAKM,OAAOnB,EAAKY,EAAOZ,KAHlC,IAAK,IAAIA,KAAOY,EAAS,EAAhBZ,GAMT,OADA1D,QAAQC,IAAI,SAAUsE,GACfA,I,6BAGJD,GACH,IAAMC,EAAOrE,KAAK4E,kBAAkBR,GACpC/E,MAAMC,EAAOR,OAAS,gBAAiB,CACnCS,YAAa,YAGZC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAL,GACFE,MAAMC,EAAOR,OAAS,cAAgBK,EAAKsE,IAAK,CAC5CxD,OAAQ,MACR4E,KAAMR,EACN9E,YAAa,YAEZC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAL,GAAI,OAAIW,QAAQC,IAAI,QAASZ,MAElCS,OAAM,SAAAqF,GAAG,OAAInF,QAAQC,IAAIkF,SAEjCrF,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,Q,+BAO5B,OACI,yBAAKS,UAAU,gBACX,uCACA,kBAAC,IAAD,CAAQ4E,cAAe,CAACM,KAAM,GAAIjF,SAAU,GAAI6F,SAAU,GAAIG,UAAW,IAAI/D,KAAQ8D,OAAQ,IAAKE,MAAO,GAAI5F,OAAQ,IAC7GuE,iBAAkB8B,EAClB5B,SAAUrF,KAAKsF,OAAO5E,KAAKV,QAE1B,YAAsB,IAApBuF,EAAmB,EAAnBA,cACC,OAAO,kBAAC,IAAD,CAAMjF,UAAU,sBACvB,yBAAKA,UAAU,kBACX,2BAAOwF,QAAQ,QAAf,SACA,kBAAC,IAAD,CAAON,KAAK,OAAO9D,GAAG,OAAOpB,UAAU,iBACvC,kBAAC,IAAD,CAAcA,UAAU,0BAA0BkF,KAAK,OAAOO,UAAU,SAE5E,yBAAKzF,UAAU,kBACX,2BAAOwF,QAAQ,YAAf,aACA,kBAAC,IAAD,CAAON,KAAK,WAAW9D,GAAG,WAAWpB,UAAU,iBAC/C,kBAAC,IAAD,CAAcA,UAAU,0BAA0BkF,KAAK,WAAWO,UAAU,SAEhF,yBAAKzF,UAAU,kBACX,2BAAOwF,QAAQ,YAAf,aACA,kBAAC,IAAD,CAAOL,KAAK,WAAWD,KAAK,WAAW9D,GAAG,WAAWpB,UAAU,iBAC/D,kBAAC,IAAD,CAAcA,UAAU,0BAA0BkF,KAAK,WAAWO,UAAU,SAEhF,yBAAKzF,UAAU,mBACX,2BAAOkF,KAAK,SAASC,KAAK,OAAO/D,GAAG,SAASgE,SAAW,SAAAC,GACpDJ,EAAc,SAAUI,EAAMC,cAAcC,MAAM,OAEtD,2BAAOC,QAAQ,SAASxF,UAAU,iBAC9B,sDAIJ,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAcA,UAAU,0BAA0BkF,KAAK,SAASO,UAAU,UAGlF,yBAAKzF,UAAU,kBACX,2BAAOwF,QAAQ,aAAf,eACA,kBAAC,IAAD,CAAOL,KAAK,OAAOD,KAAK,YAAY9D,GAAG,YAAYpB,UAAU,iBAC7D,kBAAC,IAAD,CAAcA,UAAU,0BAA0BkF,KAAK,YAAYO,UAAU,SAEjF,yBAAKzF,UAAU,kBACX,2BAAOwF,QAAQ,UAAf,WACA,kBAAC,IAAD,CAAOC,UAAU,SAASP,KAAK,SAAS9D,GAAG,SAASpB,UAAU,gBAC1D,4BAAQoE,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,WAEJ,kBAAC,IAAD,CAAcpE,UAAU,0BAA0BkF,KAAK,YAAYO,UAAU,SAEjF,yBAAKzF,UAAU,kBACX,2BAAOwF,QAAQ,SAAf,UACA,kBAAC,IAAD,CAAOE,GAAG,WAAWtE,GAAG,QAAQ8D,KAAK,QAAQlF,UAAU,iBACvD,kBAAC,IAAD,CAAcA,UAAU,0BAA0BkF,KAAK,QAAQO,UAAU,SAE7E,yBAAKzF,UAAU,6CACX,kBAAC6F,EAAA,EAAD,CAAQV,KAAK,UAAb,sB,GA9FPzE,cAwGVC,cAAW+F,GChEXE,MAhCf,WACE,OACI,kBAAC,IAAD,KACI,yBAAK5G,UAAU,OACX,kBAAC,EAAD,MACA,0BAAMA,UAAU,aACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO6G,KAAK,YACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,aACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,gBACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,UACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,gBACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,KACR,kBAAC,EAAD,YC3BNC,QACW,cAA7BtC,OAAOC,SAASsC,UAEe,UAA7BvC,OAAOC,SAASsC,UAEhBvC,OAAOC,SAASsC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrI,MAAK,SAAAsI,GACjCA,EAAaC,kB","file":"static/js/main.e5876322.chunk.js","sourcesContent":["import development from './development';\nimport production from './production';\n\nconst env = {\n  development,\n  production\n};\n\n\nexport default env[process.env.NODE_ENV || 'development'];","export default {\n    apiUrl: 'http://localhost:4000'\n};","export default {\n    apiUrl: 'https://instagram-api-rafa.herokuapp.com'\n};","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport \"./User.scss\"\nimport config from \"../../config\";\nimport { withRouter } from 'react-router-dom';\nimport {FaUser} from 'react-icons/fa'\nimport Toggle from \"react-toggle\";\n\nclass User extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: null,\n            hideMenu: true\n        }\n    }\n\n    componentDidMount() {\n        fetch(config.apiUrl + '/api/users/me', {\n            credentials: 'include'\n\n        })\n            .then(res => res.json())\n            .then(user => {\n                // console.log(user.avatarColor);\n                this.setState({user});\n            })\n            .catch(e => console.log(e))\n    }\n\n    toggleMenu() {\n            this.setState({hideMenu: !this.state.hideMenu})\n    }\n    showUserMenu() {\n        this.setState({hideMenu: true})\n    }\n\n    hideUserMenu() {\n        this.setState({hideMenu: true})\n    }\n\n    logout() {\n        fetch(config.apiUrl + '/api/users/logout', {\n            method: 'GET',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                if(res.status === 200) {\n                    this.props.history.push('/login');\n                }\n            })\n            .catch(e => console.log('Unexpected error: ', e))\n\n    }\n\n    render() {\n        return (\n            <div >\n                {\n                    this.state.user\n                        ? <div className=\"user-box\">\n                            <div className=\"header-user-details\">\n                                Hello {this.state.user.username}\n                            </div>\n                            <div className=\"user-avatar\" onClick={this.toggleMenu.bind(this)}>\n                                {\n                                    this.state.user\n                                        ? <img src={config.apiUrl + '/' + this.state.user.avatar}/>\n                                        : <FaUser size=\"2em\" />\n\n                                }\n\n                            </div>\n                                <ul className={`user-options ${this.state.hideMenu ? \"hide-user-options\" : \"\"}`}\n                                    // onMouseOut={this.hideUserMenu.bind(this)}\n                                    >\n                                    <li>Dark Mode</li>\n                                    <li><Link to=\"/editprofile\">Edit Profile</Link></li>\n                                    <li onClick={this.logout.bind(this)}>Logout</li>\n                                </ul>\n                        </div>\n\n                        : <div className=\"user-box\">\n                            <Link className=\"user-text\" to=\"/register\">Register</Link>\n                            <Link className=\"user-text\" to=\"/login\">Login</Link>\n                            <div className=\"user-avatar\"\n                                 onClick={this.toggleMenu.bind(this)}>\n                                <FaUser size=\"2em\" />\n                            </div>\n                        </div>}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(User);","import React, {Component} from 'react';\nimport \"./Header.scss\"\nimport {Link} from 'react-router-dom';\nimport {Navbar, Nav} from 'react-bootstrap';\nimport User from \"./User/User\";\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className=\"Header\">\n                <Navbar bg=\"light\" expand=\"lg\">\n                    <Navbar.Brand>\n                        <Link className=\"navbar-brand\" to=\"/\">Instagram</Link>\n                    </Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Link className=\"nav-link\" to=\"/\">Home</Link>\n                            <Link className=\"nav-link\" to=\"/profile\">Profile</Link>\n                            <Link className=\"nav-link\" to=\"/post/create\">New Post</Link>\n                        </Nav>\n                        <div>\n                           <User />\n                        </div>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n\n        );\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport { AiOutlineCloudDownload, AiOutlineShareAlt, AiOutlineHeart } from \"react-icons/ai\";\nimport { FaRegComments } from \"react-icons/fa\";\n\nimport \"./Engage.scss\"\n\nclass Engage extends Component {\n    render() {\n        return (\n            <section className=\"engage\">\n                <div className=\"engageButtons\">\n                    <span className=\"post-action-buttons\">\n                        <button className=\"commentButton\"><FaRegComments /></button>\n                        <button className=\"shareButton\"><AiOutlineShareAlt /></button>\n                        <button className=\"saveButton\"><AiOutlineCloudDownload/></button>\n                    </span>\n                    <span className=\"post-likes\">\n                        <button className=\"likeButton\"><AiOutlineHeart/></button>\n                        <span className=\"likesCount\">{this.props.likes}</span></span>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Engage;\n\n\n","import React, {Component} from 'react';\nimport \"./Tag.scss\";\n\nclass Tag extends Component {\n    render() {\n        return (\n            <span className=\"tag\">\n                #{this.props.children}\n            </span>\n        );\n    }\n}\n\nexport default Tag;","import React, {Component} from 'react';\nimport Tag from \"./Tag/Tag\";\nimport \"./Tags.scss\";\n\nclass Tags extends Component {\n    render() {\n        // const Tags = {this.props.Tags};\n        return (\n            <div className=\"tags\">\n                {this.props.tags.map(tag => {\n                    return <span>\n                        <Tag>\n                            {tag}\n                        </Tag>\n                    </span>\n                })}\n            </div>\n        );\n    }\n}\n\nexport default Tags;","import React, {Component} from 'react';\nimport \"./User.scss\"\nimport { AiOutlineUser } from \"react-icons/ai\";\nimport { FaUser } from \"react-icons/fa\";\nimport config from \"../../../../config\";\n\n\n\nclass User extends Component {\n    render() {\n        return (\n            <div className=\"user-details\">\n                {/*<FaUser className=\"user-icon\" size=\"2em\" color={this.props.iconColor} />*/}\n                <img src={config.apiUrl + '/' + this.props.avatar} alt=\"userImage\"/>\n                {this.props.userName}\n            </div>\n        );\n    }\n}\n\nexport default User;","import React, {Component} from 'react';\nimport \"./Header.scss\"\nimport User from \"./User/User\";\n\n\n// function formatDate(dateStr) {\n//     const date = new Date(dateStr);\n//     const months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n//     return months[date.getMonth()] + ' ' + date.getDate();\n// }\nfunction formatDate(dateStr) {\n    const date = new Date(dateStr);\n    return date.toLocaleString(\"en-US\", { month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric' ,year: 'numeric', })\n}\n\nclass Header extends Component {\n    render() {\n        return (\n            <header className=\"post-header\">\n                <User avatar={this.props.avatar} userName={this.props.userName} />\n                <div className=\"post-date\">{formatDate(this.props.creationDate)}</div>\n                {/*<div className=\"post-date\">{this.props.creationDate.toLocaleString(\"en-US\", { month: 'short', day: 'numeric', year: 'numeric', })}</div>*/}\n            </header>\n        );\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport \"./Post.scss\";\nimport Engage from \"./Engage/Engage\";\nimport Tags from \"./Tags/Tags\";\nimport Header from \"./Header/Header\";\nimport config from '../../config'\n\n\nclass Post extends Component {\n    render() {\n        return (\n            <article className=\"post\">\n                <Header creationDate={this.props.datePosted} avatar={this.props.avatar} userName={this.props.userName}/>\n                <div className=\"post-image-wrapper\">\n                    <img className=\"post-image\" src={config.apiUrl + '/' + this.props.src} alt=\"post\"/>\n                </div>\n                <Engage likes={ this.props.likes}/>\n                <div className=\"post-content\">\n                    <h1 className=\"post-title\">{this.props.title}</h1>\n                    <Tags tags={this.props.tags} />\n                </div>\n            </article>\n        );\n    }\n}\n\nexport default Post;","import React, {Component} from 'react';\nimport \"./Feed.scss\";\nimport Post from \"./Post/Post\";\nimport {HashLoader} from \"react-spinners\";\nimport config from \"../config\";\n\n\nclass Feed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: [],\n            loading: true\n        }\n    }\n\n    componentDidMount() {\n        fetch(config.apiUrl + '/api/posts')\n            .then(res => res.json())\n            .then(posts => {\n                this.setState({posts,loading:false});\n            });\n    }\n\n    render() {\n\n        return (\n            <div>\n                    {this.state.loading ?\n                        <div className=\"loading\">\n                            <HashLoader\n                                sizeUnit={\"px\"}\n                                size={180}\n                                color={'#5798ff'}\n                                loading={true}/>\n                        </div> : null\n                    }\n                <div className=\"feed d-flex flex-wrap card-group\">\n                    {this.state.posts.map(post => {\n                        return <div className=\"post-wrapper col-sm-12 col-md-4\">\n                            <Post\n                                key={post._id}\n                                title={post.title}\n                                src={post.image}\n                                likes={post.likes}\n                                datePosted={post.created}\n                                tags={post.tags}\n                                userName={post.user.username}\n                                avatar={post.user.avatar}\n                            />\n                        </div>\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Feed;","import React, {Component} from 'react';\n\nclass Profile extends Component {\n    render() {\n        return (\n            <div>\n                Profile\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import * as yup from 'yup';\n\nlet schema = yup.object().shape({\n    title: yup.string().min(2).max(255).required('Write something about your post'),\n    image: yup.mixed().required('Add an image to your post'),\n    tags: yup.array()\n});\n\nexport default schema;","import React, {Component} from 'react';\nimport { Formik, Form, Field, ErrorMessage} from \"formik\";\nimport Button from \"react-bootstrap/Button\";\nimport postModel from '../models/post.model'\nimport \"./CreatePost.scss\"\nimport { GoCloudUpload } from \"react-icons/go\";\nimport { FaRegShareSquare } from \"react-icons/fa\";\nimport config from '../config'\nimport TagsInput from 'react-tagsinput'\nimport 'react-tagsinput/react-tagsinput.css'\n\nclass CreatePost extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {tags: []}\n    }\n\n    handleTagsChange(tags) {\n            this.setState({\n                tags: tags\n            });\n        }\n\n    convertToFormData(values) {\n        const data = new FormData();\n        for (let key in values) {\n            Array.isArray(values[key])\n                ? values[key].forEach(value => data.append(key + '[]', value))\n                : data.append(key, values[key]) ;\n        }\n        return data;\n    }\n\n    submit(values) {\n        const data = this.convertToFormData(values);\n\n        fetch(config.apiUrl + '/api/posts', {\n            method: 'POST',\n            body: data,\n            credentials: 'include'\n        })\n            .then(res => res.json())\n            .then(post => console.log('post:', post))\n            .then(() => window.location.href = \"/\")\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        return (\n            <div className=\"post-create\">\n                <h2>Create Post</h2>\n                <Formik initialValues={{image: '', title: '', tags: []}}\n                        validationSchema={postModel}\n                        onSubmit={this.submit.bind(this)}\n                        >\n                    {({setFieldValue}) => {\n                        return <Form className=\"col-xs-12 col-md-6 m-auto\">\n                            <div className=\"row form-group \">\n                                <input name=\"image\" type=\"file\" id=\"image\" onChange={(event => {\n                                    setFieldValue('image', event.currentTarget.files[0]);\n                                })} />\n                                <label htmlFor=\"image\" className=\"upload-button\">\n                                <span>\n                                    <GoCloudUpload /> Select image\n                                </span>\n                                </label>\n                                <div className=\"container-fluid row\">\n                                    <ErrorMessage className=\"alert alert-danger mt-2\" name=\"image\" component=\"div\" />\n                                </div>\n                            </div>\n                            <div className=\"row form-group\">\n                                <label>Title:</label>\n                                <Field name=\"title\" as=\"textarea\" placeholder=\"About this post...\" className=\"form-control\"/>\n                                <ErrorMessage className=\"alert alert-danger\" name=\"title\" component=\"div\" />\n                            </div>\n                            <div className=\"row form-group\">\n                                <label>Tags:</label>\n                                <TagsInput value={this.state.tags}\n                                           onChange={(tags) => {\n                                               this.handleTagsChange(tags);\n                                               setFieldValue('tags', tags);\n                                           }}\n                                           className=\"tags-wrapper create-post-tags\" />\n                                <div><sub>Press Enter after each a tag</sub></div>\n                            </div>\n                            <div className=\"row form-group d-flex justify-content-end\">\n                                <Button type=\"submit\"><FaRegShareSquare /> Share your post</Button>\n                            </div>\n                        </Form>\n                    }}\n\n                </Formik>\n            </div>\n        );\n    }\n}\n\nexport default CreatePost;","import * as yup from 'yup';\n\nlet schema = yup.object().shape({\n    name: yup.string().min(2).max(255).required(),\n    username: yup.string().min(2).max(255).required(),\n    password: yup.string().matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{2,}$/, 'Password must contain at least: 1 lower case and 1 upper case').min(2).max(16).required(),\n    gender: yup.string().required(),\n    birthDate: yup.date().required(),\n    about: yup.string(),\n    avatar: yup.mixed().required('Add an image to your post')\n});\n\nexport default schema;","import React, { Component } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport registerModel from '../models/register.model';\nimport { Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport config from \"../config\";\nimport \"./Register.scss\";\n\nclass Register extends Component {\n\n    convertToFormData(values) {\n        const data = new FormData();\n        for (let key in values) {\n            Array.isArray(values[key])\n                ? values[key].forEach(value => data.append(key + '[]', value))\n                : data.append(key, values[key]) ;\n        }\n        return data;\n    }\n\n    submit(values) {\n        const data = this.convertToFormData(values);\n\n        fetch(config.apiUrl + '/api/users', {\n            method: 'POST',\n            body: data,\n            credentials: 'include'\n        })\n            .then(res => res.json())\n            .then(user => console.log('user:', user))\n            // .then(() => window.location.href = \"/\")\n            .catch(err => console.log(err));\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"register-new\">\n                <h2>Registration</h2>\n                <Formik initialValues={{name: '', username: '', password: '', birthDate: new Date(), gender: 'm', about: '', avatar: ''}}\n                        validationSchema={registerModel}\n                        onSubmit={this.submit.bind(this)}\n                >\n                        {({setFieldValue}) => {\n                            return <Form className=\"col-xs-12 col-md-6\" >\n                            <div className=\"row form-group\">\n                                <label htmlFor=\"name\">Name:</label>\n                                <Field name=\"name\" id=\"name\" className=\"form-control\" />\n                                <ErrorMessage className=\"alert alert-danger mt-2\" name=\"name\" component=\"div\" />\n                            </div>\n                            <div className=\"row form-group\">\n                                <label htmlFor=\"username\">Username:</label>\n                                <Field name=\"username\" id=\"username\" className=\"form-control\" />\n                                <ErrorMessage className=\"alert alert-danger mt-2\" name=\"username\" component=\"div\" />\n                            </div>\n                            <div className=\"row form-group\">\n                                <label htmlFor=\"password\">Password:</label>\n                                <Field type=\"password\" name=\"password\" id=\"password\" className=\"form-control\" />\n                                <ErrorMessage className=\"alert alert-danger mt-2\" name=\"password\" component=\"div\" />\n                            </div>\n                            <div className=\"row form-group \">\n                                <input name=\"avatar\" type=\"file\" id=\"avatar\" onChange={(event => {\n                                    setFieldValue('avatar', event.currentTarget.files[0]);\n                                })} />\n                                <label htmlFor=\"avatar\" className=\"upload-button\">\n                                    <span>\n                                        Select avatar image\n                                    </span>\n                                </label>\n                                <div className=\"container-fluid row\">\n                                    <ErrorMessage className=\"alert alert-danger mt-2\" name=\"avatar\" component=\"div\" />\n                                </div>\n                            </div>\n                            <div className=\"row form-group\">\n                                <label htmlFor=\"birthDate\">Birth Date:</label>\n                                <Field type=\"date\" name=\"birthDate\" id=\"birthDate\" className=\"form-control\" />\n                                <ErrorMessage className=\"alert alert-danger mt-2\" name=\"birthDate\" component=\"div\" />\n                            </div>\n                            <div className=\"row form-group\">\n                                <label htmlFor=\"gender\">Gender:</label>\n                                <Field component=\"select\" name=\"gender\" id=\"gender\" className=\"form-control\">\n                                    <option value=\"m\">Male</option>\n                                    <option value=\"f\">Female</option>\n                                </Field>\n                                <ErrorMessage className=\"alert alert-danger mt-2\" name=\"birthDate\" component=\"div\" />\n                            </div>\n                            <div className=\"row form-group\">\n                                <label htmlFor=\"about\">About:</label>\n                                <Field as=\"textarea\" id=\"about\" name=\"about\" className=\"form-control\" />\n                                <ErrorMessage className=\"alert alert-danger mt-2\" name=\"about\" component=\"div\" />\n                            </div>\n                            <div className=\"row form-group d-flex justify-content-end\">\n                                <Button type=\"submit\">Register</Button>\n                            </div>\n                        </Form>\n                    }}\n                </Formik>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Register);","import * as yup from 'yup';\n\nlet schema = yup.object().shape({\n    username: yup.string().min(2).max(255).required(),\n    password: yup.string().min(2).max(16).required(),\n});\n\nexport default schema;","import React, { Component } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport loginModel from '../models/login.model';\nimport { Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport config from '../config';\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            incorrectLoginMessage: false\n        };\n    }\n\n    submit(values) {\n        console.log(values);\n        this.setState({incorrectLoginMessage: false});\n        fetch(config.apiUrl + '/api/users/login', {\n            method: 'POST',\n            body: JSON.stringify(values),\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => {\n            if(res.status === 200) {\n                this.props.history.push('/');\n            } else if(res.status === 403) {\n                this.setState({incorrectLoginMessage: true});\n            } else {\n                console.log('Unexpected error');\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Login</h2>\n                <hr />\n                <Formik initialValues={{username: '', password: ''}}\n                        validationSchema={loginModel}\n                        onSubmit={this.submit.bind(this)}>\n                    <Form className=\"col-xs-12 col-md-6\">\n                        {this.state.incorrectLoginMessage ? <div className=\"row alert alert-danger mt-2\">Incorrect username or password</div> : null}\n                        <div className=\"row form-group\">\n                            <label htmlFor=\"username\">Username:</label>\n                            <Field name=\"username\" id=\"username\" className=\"form-control\" />\n                            <ErrorMessage className=\"alert alert-danger mt-2\" name=\"username\" component=\"div\" />\n                        </div>\n                        <div className=\"row form-group\">\n                            <label htmlFor=\"password\">Password:</label>\n                            <Field type=\"password\" name=\"password\" id=\"password\" className=\"form-control\" />\n                            <ErrorMessage className=\"alert alert-danger mt-2\" name=\"password\" component=\"div\" />\n                        </div>\n                        <div className=\"row form-group d-flex justify-content-end\">\n                            <Button type=\"submit\">Login</Button>\n                        </div>\n                    </Form>\n                </Formik>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Login);","import * as yup from 'yup';\n\nlet schema = yup.object().shape({\n    name: yup.string().min(2).max(255),\n    username: yup.string().min(2).max(255),\n    password: yup.string().matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{2,}$/, 'Password must contain at least: 1 lower case and 1 upper case').min(2).max(16),\n    gender: yup.string(),\n    birthDate: yup.date(),\n    about: yup.string(),\n    avatar: yup.mixed('Add an image to your post')\n});\n\nexport default schema;","import React, { Component } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport editProfileModel from '../models/editProfile.models';\nimport { Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport config from \"../config\";\nimport \"./EditProfile.scss\";\n\nclass EditPofile extends Component {\n\n    convertToFormData(values) {\n        const data = new FormData();\n        for (let key in values) {\n            Array.isArray(values[key])\n                ? values[key].forEach(value => data.append(key + '[]', value))\n                : data.append(key, values[key]) ;\n        }\n        console.log('data: ', data);\n        return data;\n    }\n\n    submit(values) {\n        const data = this.convertToFormData(values);\n        fetch(config.apiUrl + '/api/users/me', {\n            credentials: 'include'\n\n        })\n            .then(res => res.json())\n            .then(user => {\n                fetch(config.apiUrl + '/api/users/' + user._id, {\n                    method: 'PUT',\n                    body: data,\n                    credentials: 'include'\n                })\n                    .then(res => res.json())\n                    .then(user => console.log('user:', user))\n                    // .then(() => window.location.href = \"/\")\n                    .catch(err => console.log(err));\n            })\n            .catch(e => console.log(e))\n\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"register-new\">\n                <h2>Profile</h2>\n                <Formik initialValues={{name: '', username: '', password: '', birthDate: new Date(), gender: 'm', about: '', avatar: ''}}\n                        validationSchema={editProfileModel}\n                        onSubmit={this.submit.bind(this)}\n                >\n                        {({setFieldValue}) => {\n                            return <Form className=\"col-xs-12 col-md-6\" >\n                            <div className=\"row form-group\">\n                                <label htmlFor=\"name\">Name:</label>\n                                <Field name=\"name\" id=\"name\" className=\"form-control\" />\n                                <ErrorMessage className=\"alert alert-danger mt-2\" name=\"name\" component=\"div\" />\n                            </div>\n                            <div className=\"row form-group\">\n                                <label htmlFor=\"username\">Username:</label>\n                                <Field name=\"username\" id=\"username\" className=\"form-control\" />\n                                <ErrorMessage className=\"alert alert-danger mt-2\" name=\"username\" component=\"div\" />\n                            </div>\n                            <div className=\"row form-group\">\n                                <label htmlFor=\"password\">Password:</label>\n                                <Field type=\"password\" name=\"password\" id=\"password\" className=\"form-control\" />\n                                <ErrorMessage className=\"alert alert-danger mt-2\" name=\"password\" component=\"div\" />\n                            </div>\n                            <div className=\"row form-group \">\n                                <input name=\"avatar\" type=\"file\" id=\"avatar\" onChange={(event => {\n                                    setFieldValue('avatar', event.currentTarget.files[0]);\n                                })} />\n                                <label htmlFor=\"avatar\" className=\"upload-button\">\n                                    <span>\n                                        Select avatar image\n                                    </span>\n                                </label>\n                                <div className=\"container-fluid row\">\n                                    <ErrorMessage className=\"alert alert-danger mt-2\" name=\"avatar\" component=\"div\" />\n                                </div>\n                            </div>\n                            <div className=\"row form-group\">\n                                <label htmlFor=\"birthDate\">Birth Date:</label>\n                                <Field type=\"date\" name=\"birthDate\" id=\"birthDate\" className=\"form-control\" />\n                                <ErrorMessage className=\"alert alert-danger mt-2\" name=\"birthDate\" component=\"div\" />\n                            </div>\n                            <div className=\"row form-group\">\n                                <label htmlFor=\"gender\">Gender:</label>\n                                <Field component=\"select\" name=\"gender\" id=\"gender\" className=\"form-control\">\n                                    <option value=\"m\">Male</option>\n                                    <option value=\"f\">Female</option>\n                                </Field>\n                                <ErrorMessage className=\"alert alert-danger mt-2\" name=\"birthDate\" component=\"div\" />\n                            </div>\n                            <div className=\"row form-group\">\n                                <label htmlFor=\"about\">About:</label>\n                                <Field as=\"textarea\" id=\"about\" name=\"about\" className=\"form-control\" />\n                                <ErrorMessage className=\"alert alert-danger mt-2\" name=\"about\" component=\"div\" />\n                            </div>\n                            <div className=\"row form-group d-flex justify-content-end\">\n                                <Button type=\"submit\">Register</Button>\n                            </div>\n                        </Form>\n                    }}\n                </Formik>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(EditPofile);","import React from 'react';\nimport './App.scss';\nimport Header from \"./Header/Header\";\nimport Feed from \"./Feed/Feed\";\nimport Profile from \"./Profile/Profile\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport CreatePost from \"./CreatePost/CreatePost\";\nimport Register from \"./Register/Register\";\nimport Login from \"./Login/Login\";\nimport EditPofile from \"./editProfile/EditPofile\";\n\n\nfunction App() {\n  return (\n      <Router>\n          <div className=\"App\">\n              <Header />\n              <main className=\"container\">\n                  <Switch>\n                      <Route path=\"/profile\">\n                          <Profile />\n                      </Route>\n                      <Route path=\"/register\">\n                          <Register />\n                      </Route>\n                      <Route path=\"/editprofile\">\n                          <EditPofile />\n                      </Route>\n                      <Route path=\"/login\">\n                          <Login />\n                      </Route>\n                      <Route path=\"/post/create\">\n                          <CreatePost />\n                      </Route>\n                      <Route path=\"/\">\n                          <Feed/>\n                      </Route>\n                  </Switch>\n              </main>\n          </div>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. ColorPalet is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}