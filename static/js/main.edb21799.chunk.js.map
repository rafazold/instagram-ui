{"version":3,"sources":["config/index.js","config/development.js","config/production.js","Header/User/User.js","Header/Header.js","Feed/Post/Engage/Engage.js","Feed/Post/Tags/Tag/Tag.js","Feed/Post/Tags/Tags.js","Feed/Post/Header/User/User.js","Feed/Post/Header/Header.js","Feed/Post/Post.js","Feed/Feed.js","Profile/Profile.js","models/post.model.js","CreatePost/CreatePost.js","models/register.model.js","Register/Register.js","models/login.model.js","Login/Login.js","App.js","serviceWorker.js","index.js"],"names":["env","development","apiUrl","production","User","props","state","user","fetch","config","credentials","then","res","json","setState","catch","e","console","log","className","this","name","to","Component","Header","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Engage","likes","Tag","children","Tags","tags","map","tag","size","dateStr","date","Date","getMonth","getDate","formatDate","creationDate","Post","datePosted","src","alt","title","Feed","posts","loading","sizeUnit","color","post","key","_id","image","created","Profile","schema","yup","shape","min","max","required","CreatePost","values","data","FormData","Array","isArray","forEach","value","append","convertToFormData","method","body","window","location","href","err","initialValues","validationSchema","postModel","onSubmit","submit","bind","setFieldValue","type","onChange","event","currentTarget","files","htmlFor","component","as","placeholder","handleTagsChange","Button","username","password","gender","birthDate","about","Register","JSON","stringify","headers","history","push","registerModel","withRouter","Login","incorrectLoginMessage","status","loginModel","App","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.edb21799.chunk.js","sourcesContent":["import development from './development';\nimport production from './production';\n\nconst env = {\n  development,\n  production\n};\n\n\nexport default env[process.env.NODE_ENV || 'development'];","export default {\n    apiUrl: 'http://localhost:4000'\n};","export default {\n    apiUrl: 'http://localhost:4000'\n};","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport \"./User.scss\"\nimport config from \"../../config\";\n\nclass User extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {user: null}\n    }\n\n    componentDidMount() {\n        fetch(config.apiUrl + '/api/users/me', {\n            credentials: 'include'\n\n        })\n            .then(res => res.json())\n            .then(user => {\n                this.setState({user});\n            })\n            .catch(e => console.log(e))\n    }\n\n    render() {\n        return (\n            <div className=\"User\">\n                {\n                    this.state.user\n                        ? <div>Hello {this.state.user.name}</div>\n                        : <div className=\"user-text\">\n                            <Link to=\"/register\">Register</Link>\n                            <Link to=\"/login\">Login</Link>\n                        </div>}\n                <div className=\"user-avatar\">\n                        USER\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default User;","import React, {Component} from 'react';\nimport \"./Header.scss\"\nimport {Link} from 'react-router-dom';\nimport {Navbar, Nav} from 'react-bootstrap';\nimport User from \"./User/User\";\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className=\"Header\">\n                <Navbar bg=\"light\" expand=\"lg\">\n                    <Navbar.Brand>\n                        <Link className=\"navbar-brand\" to=\"/\">Instagram</Link>\n                    </Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Link className=\"nav-link\" to=\"/\">Home</Link>\n                            <Link className=\"nav-link\" to=\"/profile\">Profile</Link>\n                            <Link className=\"nav-link\" to=\"/post/create\">New Post</Link>\n                        </Nav>\n                        <div>\n                           <User />\n                        </div>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n\n        );\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport { AiOutlineCloudDownload, AiOutlineShareAlt, AiOutlineHeart } from \"react-icons/ai\";\nimport { FaRegComments } from \"react-icons/fa\";\n\nimport \"./Engage.scss\"\n\nclass Engage extends Component {\n    render() {\n        return (\n            <section className=\"engage\">\n                <div className=\"engageButtons\">\n                    <span className=\"post-action-buttons\">\n                        <button className=\"commentButton\"><FaRegComments /></button>\n                        <button className=\"shareButton\"><AiOutlineShareAlt /></button>\n                        <button className=\"saveButton\"><AiOutlineCloudDownload/></button>\n                    </span>\n                    <span className=\"post-likes\">\n                        <button className=\"likeButton\"><AiOutlineHeart/></button>\n                        <span className=\"likesCount\">{this.props.likes}</span></span>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Engage;\n\n\n","import React, {Component} from 'react';\nimport \"./Tag.scss\";\n\nclass Tag extends Component {\n    render() {\n        return (\n            <span className=\"tag\">\n                #{this.props.children}\n            </span>\n        );\n    }\n}\n\nexport default Tag;","import React, {Component} from 'react';\nimport Tag from \"./Tag/Tag\";\nimport \"./Tags.scss\";\n\nclass Tags extends Component {\n    render() {\n        // const Tags = {this.props.Tags};\n        return (\n            <div className=\"tags\">\n                {this.props.tags.map(tag => {\n                    return <span>\n                        <Tag>\n                            {tag}\n                        </Tag>\n                    </span>\n                })}\n            </div>\n        );\n    }\n}\n\nexport default Tags;","import React, {Component} from 'react';\nimport \"./User.scss\"\nimport { AiOutlineUser } from \"react-icons/ai\";\n\n\n\nclass User extends Component {\n    render() {\n        return (\n            <div className=\"user-details\">\n                <AiOutlineUser className=\"user-icon\" size=\"2em\" />\n                {/*<img src={this.props.src}/>*/}\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default User;","import React, {Component} from 'react';\nimport \"./Header.scss\"\nimport User from \"./User/User\";\n\n\nfunction formatDate(dateStr) {\n    const date = new Date(dateStr);\n    const months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n    return months[date.getMonth()] + ' ' + date.getDate();\n}\n\nclass Header extends Component {\n    render() {\n        return (\n            <header className=\"post-header\">\n                <User>USER DETAILS</User>\n                <div className=\"post-date\">{formatDate(this.props.creationDate)}</div>\n                {/*<div className=\"post-date\">{this.props.creationDate.toLocaleString(\"en-US\", { month: 'short', day: 'numeric', year: 'numeric', })}</div>*/}\n            </header>\n        );\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport \"./Post.scss\";\nimport Engage from \"./Engage/Engage\";\nimport Tags from \"./Tags/Tags\";\nimport Header from \"./Header/Header\";\nimport config from '../../config'\n\n\nclass Post extends Component {\n    render() {\n        return (\n            <article className=\"post\">\n                <Header creationDate={this.props.datePosted} />\n                {/*<Header creationDate={new Date(this.props.datePosted * 1000)} />*/}\n                <div className=\"post-image\">\n                    <img src={config.apiUrl + '/' + this.props.src} alt=\"post\"/>\n                </div>\n                <Engage likes={ this.props.likes}/>\n                <div className=\"post-content\">\n                    <h1 className=\"post-title\">{this.props.title}</h1>\n                    <Tags tags={this.props.tags} />\n                </div>\n            </article>\n        );\n    }\n}\n\nexport default Post;","import React, {Component} from 'react';\nimport \"./Feed.scss\";\nimport Post from \"./Post/Post\";\nimport {HashLoader} from \"react-spinners\";\nimport config from \"../config\";\n\n\nclass Feed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: [],\n            loading: true\n        }\n    }\n\n    componentDidMount() {\n        fetch(config.apiUrl + '/api/posts')\n        // fetch(\"https://my-json-server.typicode.com/evyros/fake-api/posts\")\n            .then(res => res.json())\n            .then(posts => {\n                this.setState({posts,loading:false});\n            });\n    }\n\n    render() {\n\n        return (\n            <div>\n                    {this.state.loading ?\n                        <div className=\"loading\">\n                            <HashLoader\n                                sizeUnit={\"px\"}\n                                size={180}\n                                color={'#5798ff'}\n                                loading={true}/>\n                        </div> : null\n                    }\n                <div className=\"feed d-flex flex-wrap card-group\">\n                    {this.state.posts.map(post => {\n                        return <div className=\"post-wrapper col-sm-12 col-md-4\">\n                            <Post\n                                key={post._id}\n                                title={post.title}\n                                src={post.image}\n                                likes={post.likes}\n                                datePosted={post.created}\n                                tags={post.tags}/>\n                        </div>\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Feed;","import React, {Component} from 'react';\n\nclass Profile extends Component {\n    render() {\n        return (\n            <div>\n                Profile\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import * as yup from 'yup';\n\nlet schema = yup.object().shape({\n    title: yup.string().min(2).max(255).required('Write something about your post'),\n    image: yup.mixed().required('Add an image to your post'),\n    tags: yup.array()\n});\n\nexport default schema;","import React, {Component} from 'react';\nimport { Formik, Form, Field, ErrorMessage} from \"formik\";\nimport Button from \"react-bootstrap/Button\";\nimport postModel from '../models/post.model'\nimport \"./CreatePost.scss\"\nimport { GoCloudUpload } from \"react-icons/go\";\nimport { FaRegShareSquare } from \"react-icons/fa\";\nimport config from '../config'\nimport TagsInput from 'react-tagsinput'\nimport 'react-tagsinput/react-tagsinput.css'\n\n\n\nclass CreatePost extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {tags: []}\n    }\n\n    handleTagsChange(tags) {\n            this.setState({\n                tags: tags\n            });\n        }\n\n    convertToFormData(values) {\n        const data = new FormData();\n        for (let key in values) {\n            Array.isArray(values[key])\n                ? values[key].forEach(value => data.append(key + '[]', value))\n                : data.append(key, values[key]) ;\n        }\n        return data;\n    }\n\n    submit(values) {\n        const data = this.convertToFormData(values);\n\n        fetch(config.apiUrl + '/api/posts', {\n            method: 'POST',\n            body: data\n        })\n            .then(res => res.json())\n            .then(post => console.log('post:', post))\n            .then(() => window.location.href = \"/\")\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        return (\n            <div className=\"post-create\">\n                <h2 className=\"\">Create Post</h2>\n                <Formik initialValues={{image: '', title: '', tags: []}}\n                        validationSchema={postModel}\n                        onSubmit={this.submit.bind(this)}\n                        >\n                    {({setFieldValue}) => {\n                        return <Form className=\"col-xs-12 col-md-6 m-auto\">\n                            <div className=\"row form-group \">\n                                <input name=\"image\" type=\"file\" id=\"image\" onChange={(event => {\n                                    setFieldValue('image', event.currentTarget.files[0]);\n                                })} />\n                                <label htmlFor=\"image\" className=\"upload-button\">\n                                <span>\n                                    <GoCloudUpload /> Select image\n                                </span>\n                                </label>\n                                <div className=\"container-fluid row\">\n                                    <ErrorMessage className=\"alert alert-danger mt-2\" name=\"image\" component=\"div\" />\n                                </div>\n                            </div>\n                            <div className=\"row form-group\">\n                                <label>Title:</label>\n                                <Field name=\"title\" as=\"textarea\" placeholder=\"About this post...\" className=\"form-control\"/>\n                                <ErrorMessage className=\"alert alert-danger\" name=\"title\" component=\"div\" />\n                            </div>\n                            <div className=\"row form-group\">\n                                <label>Tags:</label>\n                                <TagsInput value={this.state.tags}\n                                           onChange={(tags) => {\n                                               this.handleTagsChange(tags);\n                                               setFieldValue('tags', tags);\n                                           }}\n                                           className=\"tags-wrapper create-post-tags\" />\n                                <div><sub>Press Enter after each a tag</sub></div>\n                            </div>\n                            <div className=\"row form-group d-flex justify-content-end\">\n                                <Button type=\"submit\"><FaRegShareSquare /> Share your post</Button>\n                            </div>\n                        </Form>\n                    }}\n\n                </Formik>\n            </div>\n        );\n    }\n}\n\nexport default CreatePost;","import * as yup from 'yup';\n\nlet schema = yup.object().shape({\n    name: yup.string().min(2).max(255).required(),\n    username: yup.string().min(2).max(255).required(),\n    password: yup.string().min(2).max(16).required(),\n    gender: yup.string().required(),\n    birthDate: yup.date().required(),\n    about: yup.string()\n});\n\nexport default schema;","import React, { Component } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport registerModel from '../models/register.model';\nimport { Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport config from \"../config\";\n\nclass Register extends Component {\n\n    submit(values) {\n        fetch(config.apiUrl + '/api/users', {\n            method: 'POST',\n            body: JSON.stringify(values),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => res.json())\n            .then(() => this.props.history.push('/'));\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Registration</h2>\n                <hr />\n                <Formik initialValues={{name: '', username: '', password: '', birthDate: new Date(), gender: 'm', about: ''}}\n                        validationSchema={registerModel}\n                        onSubmit={this.submit.bind(this)}>\n                    <Form className=\"col-xs-12 col-md-6\">\n                        <div className=\"row form-group\">\n                            <label htmlFor=\"name\">Name:</label>\n                            <Field name=\"name\" id=\"name\" className=\"form-control\" />\n                            <ErrorMessage className=\"alert alert-danger mt-2\" name=\"name\" component=\"div\" />\n                        </div>\n                        <div className=\"row form-group\">\n                            <label htmlFor=\"username\">Username:</label>\n                            <Field name=\"username\" id=\"username\" className=\"form-control\" />\n                            <ErrorMessage className=\"alert alert-danger mt-2\" name=\"username\" component=\"div\" />\n                        </div>\n                        <div className=\"row form-group\">\n                            <label htmlFor=\"password\">Password:</label>\n                            <Field type=\"password\" name=\"password\" id=\"password\" className=\"form-control\" />\n                            <ErrorMessage className=\"alert alert-danger mt-2\" name=\"password\" component=\"div\" />\n                        </div>\n                        <div className=\"row form-group\">\n                            <label htmlFor=\"birthDate\">Birth Date:</label>\n                            <Field type=\"date\" name=\"birthDate\" id=\"birthDate\" className=\"form-control\" />\n                            <ErrorMessage className=\"alert alert-danger mt-2\" name=\"birthDate\" component=\"div\" />\n                        </div>\n                        <div className=\"row form-group\">\n                            <label htmlFor=\"gender\">Gender:</label>\n                            <Field component=\"select\" name=\"birthDate\" id=\"gender\" className=\"form-control\">\n                                <option value=\"m\">Male</option>\n                                <option value=\"f\">Female</option>\n                            </Field>\n                            <ErrorMessage className=\"alert alert-danger mt-2\" name=\"birthDate\" component=\"div\" />\n                        </div>\n                        <div className=\"row form-group\">\n                            <label htmlFor=\"about\">About:</label>\n                            <Field as=\"textarea\" id=\"about\" name=\"about\" className=\"form-control\" />\n                            <ErrorMessage className=\"alert alert-danger mt-2\" name=\"about\" component=\"div\" />\n                        </div>\n                        <div className=\"row form-group d-flex justify-content-end\">\n                            <Button type=\"submit\">Register</Button>\n                        </div>\n                    </Form>\n                </Formik>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Register);","import * as yup from 'yup';\n\nlet schema = yup.object().shape({\n    username: yup.string().min(2).max(255).required(),\n    password: yup.string().min(2).max(16).required(),\n});\n\nexport default schema;","import React, { Component } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport loginModel from '../models/login.model';\nimport { Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport config from '../config';\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            incorrectLoginMessage: false\n        };\n    }\n\n    submit(values) {\n        console.log(values);\n        this.setState({incorrectLoginMessage: false});\n        fetch(config.apiUrl + '/api/users/login', {\n            method: 'POST',\n            body: JSON.stringify(values),\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => {\n            if(res.status === 200) {\n                this.props.history.push('/');\n            } else if(res.status === 403) {\n                this.setState({incorrectLoginMessage: true});\n            } else {\n                console.log('Unexpected error');\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Login</h2>\n                <hr />\n                <Formik initialValues={{username: '', password: ''}}\n                        validationSchema={loginModel}\n                        onSubmit={this.submit.bind(this)}>\n                    <Form className=\"col-xs-12 col-md-6\">\n                        {this.state.incorrectLoginMessage ? <div className=\"row alert alert-danger mt-2\">Incorrect username or password</div> : null}\n                        <div className=\"row form-group\">\n                            <label htmlFor=\"username\">Username:</label>\n                            <Field name=\"username\" id=\"username\" className=\"form-control\" />\n                            <ErrorMessage className=\"alert alert-danger mt-2\" name=\"username\" component=\"div\" />\n                        </div>\n                        <div className=\"row form-group\">\n                            <label htmlFor=\"password\">Password:</label>\n                            <Field type=\"password\" name=\"password\" id=\"password\" className=\"form-control\" />\n                            <ErrorMessage className=\"alert alert-danger mt-2\" name=\"password\" component=\"div\" />\n                        </div>\n                        <div className=\"row form-group d-flex justify-content-end\">\n                            <Button type=\"submit\">Login</Button>\n                        </div>\n                    </Form>\n                </Formik>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Login);","import React from 'react';\nimport './App.scss';\nimport Header from \"./Header/Header\";\nimport Feed from \"./Feed/Feed\";\nimport Profile from \"./Profile/Profile\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport CreatePost from \"./CreatePost/CreatePost\";\nimport Register from \"./Register/Register\";\nimport Login from \"./Login/Login\";\n\n\nfunction App() {\n  return (\n      <Router>\n          <div className=\"App\">\n              <Header />\n              <main className=\"container\">\n                  <Switch>\n                      <Route path=\"/profile\">\n                          <Profile />\n                      </Route>\n                      <Route path=\"/register\">\n                          <Register />\n                      </Route>\n                      <Route path=\"/login\">\n                          <Login />\n                      </Route>\n                      <Route path=\"/post/create\">\n                          <CreatePost />\n                      </Route>\n                      <Route path=\"/\">\n                          <Feed/>\n                      </Route>\n                  </Switch>\n              </main>\n          </div>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}