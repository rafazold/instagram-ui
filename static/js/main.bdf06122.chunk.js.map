{"version":3,"sources":["Header/Header.js","Feed/Post/Engage/Engage.js","Feed/Post/Tags/Tag/Tag.js","Feed/Post/Tags/Tags.js","Feed/Post/Header/User/User.js","Feed/Post/Header/Header.js","Feed/Post/Post.js","Feed/Feed.js","Profile/Profile.js","models/post.model.js","CreatePost/Tags/Tags.js","CreatePost/CreatePost.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Navbar","bg","expand","Brand","to","Toggle","aria-controls","Collapse","id","Nav","Component","Engage","this","props","likes","Tag","children","Tags","tags","map","tag","User","size","creationDate","toLocaleString","month","day","year","Post","Date","datePosted","src","alt","title","Feed","state","posts","loading","fetch","then","res","json","setState","sizeUnit","color","post","image","created","Profile","schema","yup","shape","min","max","required","value","onChange","handleChange","bind","CreatePost","values","console","log","initialValues","validationSchema","postModel","onSubmit","submit","name","type","htmlFor","component","as","placeholder","Button","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bdf06122.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport \"./Header.scss\"\nimport {Link} from 'react-router-dom';\nimport {Navbar, Nav} from 'react-bootstrap';\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className=\"Header\">\n                <Navbar bg=\"light\" expand=\"lg\">\n                    <Navbar.Brand>\n                        <Link className=\"navbar-brand\" to=\"/\">Instagram</Link>\n                    </Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Link className=\"nav-link\" to=\"/\">Home</Link>\n                            <Link className=\"nav-link\" to=\"/profile\">Profile</Link>\n                            <Link className=\"nav-link\" to=\"/post/create\">New Post</Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n\n        );\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport { AiOutlineCloudDownload, AiOutlineShareAlt, AiOutlineHeart } from \"react-icons/ai\";\nimport { FaRegComments } from \"react-icons/fa\";\n\nimport \"./Engage.scss\"\n\nclass Engage extends Component {\n    render() {\n        return (\n            <section className=\"engage\">\n                <div className=\"engageButtons\">\n                    <span className=\"post-action-buttons\">\n                        <button className=\"commentButton\"><FaRegComments /></button>\n                        <button className=\"shareButton\"><AiOutlineShareAlt /></button>\n                        <button className=\"saveButton\"><AiOutlineCloudDownload/></button>\n                    </span>\n                    <span className=\"post-likes\">\n                        <button className=\"likeButton\"><AiOutlineHeart/></button>\n                        <span className=\"likesCount\">{this.props.likes}</span></span>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Engage;\n\n\n","import React, {Component} from 'react';\nimport \"./Tag.scss\";\n\nclass Tag extends Component {\n    render() {\n        return (\n            <span className=\"tag\">\n                #{this.props.children}\n            </span>\n        );\n    }\n}\n\nexport default Tag;","import React, {Component} from 'react';\nimport Tag from \"./Tag/Tag\";\nimport \"./Tags.scss\";\n\nclass Tags extends Component {\n    render() {\n        // const Tags = {this.props.Tags};\n        return (\n            <div className=\"tags\">\n                {this.props.tags.map(tag => {\n                    return <span>\n                        <Tag>\n                            {tag}\n                        </Tag>\n                    </span>\n                })}\n            </div>\n        );\n    }\n}\n\nexport default Tags;","import React, {Component} from 'react';\nimport \"./User.scss\"\nimport { AiOutlineUser } from \"react-icons/ai\";\n\n\n\nclass User extends Component {\n    render() {\n        return (\n            <div className=\"user-details\">\n                <AiOutlineUser className=\"user-icon\" size=\"2em\" />\n                {/*<img src={this.props.src}/>*/}\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default User;","import React, {Component} from 'react';\nimport \"./Header.scss\"\nimport User from \"./User/User\";\n\n\nclass Header extends Component {\n    render() {\n        return (\n            <header className=\"post-header\">\n                <User>USER DETAILS</User>\n                <div className=\"post-date\">{this.props.creationDate.toLocaleString(\"en-US\", { month: 'short', day: 'numeric', year: 'numeric', })}</div>\n            </header>\n        );\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport \"./Post.scss\";\nimport Engage from \"./Engage/Engage\";\nimport Tags from \"./Tags/Tags\";\nimport Header from \"./Header/Header\";\n\n\nclass Post extends Component {\n    render() {\n        return (\n            <article className=\"post\">\n                <Header creationDate={new Date(this.props.datePosted * 1000)} />\n                <div className=\"post-image\">\n                    <img src={this.props.src} alt=\"post\"/>\n                </div>\n                <Engage likes={ this.props.likes}/>\n                <div className=\"post-content\">\n                    <h1 className=\"post-title\">{this.props.title}</h1>\n                    <Tags tags={this.props.tags} />\n                </div>\n            </article>\n        );\n    }\n}\n\nexport default Post;","import React, {Component} from 'react';\nimport \"./Feed.scss\";\nimport Post from \"./Post/Post\";\nimport {HashLoader} from \"react-spinners\";\n\n\nclass Feed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: [],\n            loading: true\n        }\n    }\n\n    componentDidMount() {\n        fetch(\"https://my-json-server.typicode.com/evyros/fake-api/posts\")\n            .then(res => res.json())\n            .then(posts => {\n                this.setState({posts,loading:false});\n            });\n    }\n\n    render() {\n\n        return (\n            <div>\n                    {this.state.loading ?\n                        <div className=\"loading\">\n                            <HashLoader\n                                sizeUnit={\"px\"}\n                                size={180}\n                                color={'#5798ff'}\n                                loading={true}/>\n                        </div> : null\n                    }\n                <div className=\"feed d-flex flex-wrap card-group\">\n                    {this.state.posts.map(post => {\n                        return <div className=\"post-wrapper col-sm-12 col-md-4\">\n                            <Post title={post.title} src={post.image} likes={post.likes} datePosted={post.created}\n                                  tags={post.tags}/>\n                        </div>\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Feed;","import React, {Component} from 'react';\n\nclass Profile extends Component {\n    render() {\n        return (\n            <div>\n                Profile\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import * as yup from 'yup';\n\nlet schema = yup.object().shape({\n    title: yup.string().min(2).max(255).required(),\n    image: yup.mixed().required(),\n    tags: yup.string()\n});\n\nexport default schema;","import React, {Component} from 'react';\nimport TagsInput from 'react-tagsinput'\nimport 'react-tagsinput/react-tagsinput.css' // If using WebPack and style-loader.\n\nclass Tags extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {tags: []}\n    }\n\n    handleChange(tags) {\n        this.setState({tags})\n    }\n\n    render() {\n        return <TagsInput className=\"create-post-tags\" value={this.state.tags} onChange={this.handleChange.bind(this)} />\n    }\n}\n\nexport default Tags;","import React, {Component} from 'react';\nimport { Formik, Form, Field, ErrorMessage} from \"formik\";\nimport Button from \"react-bootstrap/Button\";\nimport postModel from '../models/post.model'\nimport \"./CreatePost.scss\"\nimport { GoCloudUpload } from \"react-icons/go\";\nimport { FaRegShareSquare } from \"react-icons/fa\";\nimport Tags from \"./Tags/Tags\";\n\n\n\n\nclass CreatePost extends Component {\n\n    submit(values) {\n        console.log(values)\n    }\n\n    render() {\n        return (\n            <div className=\"post-create\">\n                <h2 className=\"\">Create Post</h2>\n                <Formik initialValues={{image: '', title: '', tags: ''}}\n                        validationSchema={postModel}\n                        onSubmit={this.submit.bind(this)}>\n                    <Form className=\"col-xs-12 col-md-6 m-auto\">\n                        <div className=\"row form-group \">\n                            <Field name=\"image\" type=\"file\" id=\"image\"/>\n                            <label htmlFor=\"image\" className=\"upload-button\">\n                                <span>\n                                    <GoCloudUpload /> Select image\n                                </span>\n                            </label>\n                            <div className=\"container-fluid row\">\n                                <ErrorMessage className=\"alert alert-danger mt-2\" name=\"image\" component=\"div\" />\n                            </div>\n                        </div>\n                        <div className=\"row form-group\">\n                            <label>Title:</label>\n                            <Field name=\"title\" as=\"textarea\" placeholder=\"About this post...\" className=\"form-control\"/>\n                            <ErrorMessage className=\"alert alert-danger\" name=\"title\" component=\"div\" />\n                        </div>\n                        <div className=\"row form-group\">\n                            <label>tags:</label>\n                            <Tags name=\"tags\" />\n                            <div><sub>Press Enter after each a tag</sub></div>\n                        </div>\n                        <div className=\"row form-group d-flex justify-content-end\">\n                            <Button type=\"submit\"><FaRegShareSquare /> Share your post</Button>\n                        </div>\n\n                    </Form>\n                </Formik>\n            </div>\n        );\n    }\n}\n\nexport default CreatePost;","import React from 'react';\nimport './App.scss';\nimport Header from \"./Header/Header\";\nimport Feed from \"./Feed/Feed\";\nimport Profile from \"./Profile/Profile\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport CreatePost from \"./CreatePost/CreatePost\";\n\n\nfunction App() {\n  return (\n      <Router>\n          <div className=\"App\">\n              <Header />\n              <main className=\"container\">\n                  <Switch>\n                      <Route path=\"/profile\">\n                          <Profile />\n                      </Route>\n                      <Route path=\"/post/create\">\n                          <CreatePost />\n                      </Route>\n                      <Route path=\"/\">\n                          <Feed/>\n                      </Route>\n                  </Switch>\n              </main>\n          </div>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}